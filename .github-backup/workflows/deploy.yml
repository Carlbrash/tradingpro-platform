name: 🚀 Deploy TradingPro Platform

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  NODE_VERSION: '18'
  BUN_VERSION: 'latest'

jobs:
  build-and-test:
    name: 🔨 Build & Test
    runs-on: ubuntu-latest

    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4

    - name: 🟦 Setup Bun
      uses: oven-sh/setup-bun@v1
      with:
        bun-version: ${{ env.BUN_VERSION }}

    - name: 📦 Install dependencies
      run: |
        cd admin-dashboard
        bun install --frozen-lockfile

    - name: 🔍 Run linting
      run: |
        cd admin-dashboard
        bun run lint

    - name: 🏗️ Build application
      run: |
        cd admin-dashboard
        bun run build

    - name: 📂 Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: tradingpro-build
        path: admin-dashboard/out
        retention-days: 7

  deploy-netlify:
    name: 🌐 Deploy to Netlify
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4

    - name: 🟦 Setup Bun
      uses: oven-sh/setup-bun@v1
      with:
        bun-version: ${{ env.BUN_VERSION }}

    - name: 📦 Install dependencies
      run: |
        cd admin-dashboard
        bun install --frozen-lockfile

    - name: 🏗️ Build for production
      run: |
        cd admin-dashboard
        bun run build

    - name: 🚀 Deploy to Netlify
      uses: nwtgck/actions-netlify@v3.0
      with:
        publish-dir: './admin-dashboard/out'
        production-branch: main
        github-token: ${{ secrets.GITHUB_TOKEN }}
        deploy-message: "🚀 Deploy from GitHub Actions - ${{ github.sha }}"
        enable-pull-request-comment: true
        enable-commit-comment: true
        overwrites-pull-request-comment: true
      env:
        NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
        NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}

  deploy-vercel:
    name: ▲ Deploy to Vercel
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop'

    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4

    - name: 🟦 Setup Bun
      uses: oven-sh/setup-bun@v1
      with:
        bun-version: ${{ env.BUN_VERSION }}

    - name: 📦 Install dependencies
      run: |
        cd admin-dashboard
        bun install --frozen-lockfile

    - name: ▲ Deploy to Vercel
      uses: amondnet/vercel-action@v25
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
        working-directory: ./admin-dashboard
        vercel-args: '--prod'

  security-scan:
    name: 🔒 Security Scan
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4

    - name: 🔍 Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: './admin-dashboard'
        format: 'sarif'
        output: 'trivy-results.sarif'

    - name: 📊 Upload Trivy scan results
      uses: github/codeql-action/upload-sarif@v2
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'
